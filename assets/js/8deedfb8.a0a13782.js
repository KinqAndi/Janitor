"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[556],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>k});var l=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function d(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,i=function(e,t){if(null==e)return{};var n,l,i={},a=Object.keys(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(l=0;l<a.length;l++)n=a[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var o=l.createContext({}),u=function(e){var t=l.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):d(d({},t),e)),n},p=function(e){var t=u(e.components);return l.createElement(o.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},h=l.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,o=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),h=u(n),k=i,m=h["".concat(o,".").concat(k)]||h[k]||s[k]||a;return n?l.createElement(m,d(d({ref:t},p),{},{components:n})):l.createElement(m,d({ref:t},p))}));function k(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,d=new Array(a);d[0]=h;var r={};for(var o in t)hasOwnProperty.call(t,o)&&(r[o]=t[o]);r.originalType=e,r.mdxType="string"==typeof e?e:i,d[1]=r;for(var u=2;u<a;u++)d[u]=n[u];return l.createElement.apply(null,d)}return l.createElement.apply(null,n)}h.displayName="MDXCreateElement"},26437:(e,t,n)=>{n.r(t),n.d(t,{contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>o});var l=n(87462),i=(n(67294),n(3905));const a={},d="Janitor Changelog",r={type:"mdx",permalink:"/Janitor/CHANGELOG",source:"@site/pages/CHANGELOG.md",title:"Janitor Changelog",description:"All notable changes to this project will be documented in this file.",frontMatter:{}},o=[{value:"1.15.0 - 2022-11-30",id:"1150---2022-11-30",level:2},{value:"Added",id:"added",level:3},{value:"Fixed",id:"fixed",level:3},{value:"1.14.2 - 2022-11-09",id:"1142---2022-11-09",level:2},{value:"Added",id:"added-1",level:3},{value:"Fixed",id:"fixed-1",level:3},{value:"1.14.1 - 2022-03-17",id:"1141---2022-03-17",level:2},{value:"Added",id:"added-2",level:3},{value:"Changed",id:"changed",level:3},{value:"Fixed",id:"fixed-2",level:3},{value:"1.14 - 2022-03-12",id:"114---2022-03-12",level:2},{value:"Added",id:"added-3",level:3},{value:"Changed",id:"changed-1",level:3},{value:"1.13.15 - 2021-11-24",id:"11315---2021-11-24",level:2},{value:"Changed",id:"changed-2",level:3},{value:"1.13.14 - 2021-11-05",id:"11314---2021-11-05",level:2},{value:"Fixed",id:"fixed-3",level:3},{value:"1.13.13 - 2021-10-20",id:"11313---2021-10-20",level:2},{value:"Changed",id:"changed-3",level:3},{value:"Fixed",id:"fixed-4",level:3},{value:"1.13.12 - 2021-10-02",id:"11312---2021-10-02",level:2},{value:"Added",id:"added-4",level:3},{value:"Changed",id:"changed-4",level:3},{value:"Fixed",id:"fixed-5",level:3},{value:"1.13.11 -",id:"11311--",level:2},{value:"1.13.10 - 2021-09-29",id:"11310---2021-09-29",level:2},{value:"Added",id:"added-5",level:3},{value:"1.13.9 - 2021-09-18",id:"1139---2021-09-18",level:2},{value:"Added",id:"added-6",level:3},{value:"Changed",id:"changed-5",level:3},{value:"1.13.7 - 2021-09-16",id:"1137---2021-09-16",level:2},{value:"Changed",id:"changed-6",level:3},{value:"Removed",id:"removed",level:3},{value:"1.13.6 - 2021-08-21",id:"1136---2021-08-21",level:2},{value:"Added",id:"added-7",level:3},{value:"1.13.4 - 2021-05-27",id:"1134---2021-05-27",level:2},{value:"Fixed",id:"fixed-6",level:3},{value:"1.0.0 -",id:"100--",level:2}],u={toc:o};function p(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,l.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"janitor-changelog"},"Janitor Changelog"),(0,i.kt)("p",null,"All notable changes to this project will be documented in this file."),(0,i.kt)("p",null,"The format is based on ",(0,i.kt)("a",{parentName:"p",href:"https://keepachangelog.com/en/1.0.0/"},"Keep a Changelog"),",\nand this project adheres to ",(0,i.kt)("a",{parentName:"p",href:"https://semver.org/spec/v2.0.0.html"},"Semantic Versioning"),"."),(0,i.kt)("h2",{id:"1150---2022-11-30"},"[1.15.0]"," - 2022-11-30"),(0,i.kt)("h3",{id:"added"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:RemoveNoClean")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:RemoveListNoClean"),", which allows removal without cleaning."),(0,i.kt)("li",{parentName:"ul"},"Added a nicer type return for Janitor. No more ",(0,i.kt)("inlineCode",{parentName:"li"},"typeof(Janitor.new())"),"!")),(0,i.kt)("h3",{id:"fixed"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed serious issue where ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:RemoveList")," would not actually remove anything from the indices reference.")),(0,i.kt)("h2",{id:"1142---2022-11-09"},"[1.14.2]"," - 2022-11-09"),(0,i.kt)("h3",{id:"added-1"},"Added"),(0,i.kt)("h3",{id:"fixed-1"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed Janitor error when attempting call task.cancel on a running thread")),(0,i.kt)("h2",{id:"1141---2022-03-17"},"1.14.1 - 2022-03-17"),(0,i.kt)("h3",{id:"added-2"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added a new ",(0,i.kt)("inlineCode",{parentName:"li"},"LinkToInstance")," method which will instead use ",(0,i.kt)("inlineCode",{parentName:"li"},"Instance.Destroying"),"."),(0,i.kt)("li",{parentName:"ul"},"Added traceback to ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:AddPromise")," for invalid promises.")),(0,i.kt)("h3",{id:"changed"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The legacy ",(0,i.kt)("inlineCode",{parentName:"li"},"LinkToInstance")," method has been renamed to ",(0,i.kt)("inlineCode",{parentName:"li"},"LegacyLinkToInstance"),".")),(0,i.kt)("h3",{id:"fixed-2"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Fixed Janitor not warning about an invalid ",(0,i.kt)("inlineCode",{parentName:"li"},"MethodName")," for threads and functions."),(0,i.kt)("li",{parentName:"ul"},"Fixed incorrect documentation about ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor.CurrentlyCleaning"),".")),(0,i.kt)("h2",{id:"114---2022-03-12"},"1.14 - 2022-03-12"),(0,i.kt)("h3",{id:"added-3"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"You can now add a ",(0,i.kt)("inlineCode",{parentName:"li"},"thread")," using ",(0,i.kt)("inlineCode",{parentName:"li"},":Add"),". This will cancel said thread when the Janitor is cleaned up."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},"__tostring")," to the Janitor class."),(0,i.kt)("li",{parentName:"ul"},"Added ",(0,i.kt)("inlineCode",{parentName:"li"},":RemoveList")," as an alternative to long ",(0,i.kt)("inlineCode",{parentName:"li"},":Remove")," chains."),(0,i.kt)("li",{parentName:"ul"},"Added the properties of ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"RbxScriptConnection")," to the documentation.")),(0,i.kt)("h3",{id:"changed-1"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Recompiled with L+ C Edition."),(0,i.kt)("li",{parentName:"ul"},"Put ",(0,i.kt)("inlineCode",{parentName:"li"},"RbxScriptConnection")," in a separate file."),(0,i.kt)("li",{parentName:"ul"},"Documentation now will split the code examples by language more obviously.")),(0,i.kt)("h2",{id:"11315---2021-11-24"},"1.13.15 - 2021-11-24"),(0,i.kt)("h3",{id:"changed-2"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:Cleanup")," now uses a while loop instead of a for loop when cleaning up. Fixed by @codesenseAye.")),(0,i.kt)("h2",{id:"11314---2021-11-05"},"1.13.14 - 2021-11-05"),(0,i.kt)("h3",{id:"fixed-3"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:AddPromise")," now will handle cancellations properly.")),(0,i.kt)("h2",{id:"11313---2021-10-20"},"1.13.13 - 2021-10-20"),(0,i.kt)("h3",{id:"changed-3"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Finding Promise is now more aware for plugins. This way it won't load a Promise library inside of ReplicatedStorage.")),(0,i.kt)("h3",{id:"fixed-4"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"APIs that return Janitor like ",(0,i.kt)("inlineCode",{parentName:"li"},"Janitor::Remove")," no longer explicitly state the return type. This seems to cause problems with typed Luau.")),(0,i.kt)("h2",{id:"11312---2021-10-02"},"1.13.12 - 2021-10-02"),(0,i.kt)("h3",{id:"added-4"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A brand new ",(0,i.kt)("a",{parentName:"li",href:"https://howmanysmall.github.io/Janitor/api/Janitor/"},"documentation site"),".")),(0,i.kt)("h3",{id:"changed-4"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Janitor's ",(0,i.kt)("inlineCode",{parentName:"li"},"__index")," no longer points to a separate table.")),(0,i.kt)("h3",{id:"fixed-5"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Urgent fix for the cleanup loop. I had forgotten the ",(0,i.kt)("inlineCode",{parentName:"li"},"continue")," so it would've likely broken.")),(0,i.kt)("h2",{id:"11311--"},"1.13.11 -"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"This version has been scrubbed from GitHub releases for a reason.")),(0,i.kt)("h2",{id:"11310---2021-09-29"},"1.13.10 - 2021-09-29"),(0,i.kt)("h3",{id:"added-5"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Added support for Promise existing in the ",(0,i.kt)("inlineCode",{parentName:"li"},"Server*")," services."),(0,i.kt)("li",{parentName:"ul"},"Documentation comments have been overhauled.")),(0,i.kt)("h2",{id:"1139---2021-09-18"},"1.13.9 - 2021-09-18"),(0,i.kt)("h3",{id:"added-6"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"A singular version of Janitor is now the only version. This still supports Promises, it just searches for the Promise library.")),(0,i.kt)("h3",{id:"changed-5"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The file tree for Janitor has been standardized.")),(0,i.kt)("h2",{id:"1137---2021-09-16"},"1.13.7 - 2021-09-16"),(0,i.kt)("h3",{id:"changed-6"},"Changed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The cleanup loop now uses ",(0,i.kt)("inlineCode",{parentName:"li"},"in pairs")," instead of ",(0,i.kt)("inlineCode",{parentName:"li"},"in next"),".")),(0,i.kt)("h3",{id:"removed"},"Removed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The ",(0,i.kt)("inlineCode",{parentName:"li"},"task.spawn")," cleanups are now removed.")),(0,i.kt)("h2",{id:"1136---2021-08-21"},"1.13.6 - 2021-08-21"),(0,i.kt)("h3",{id:"added-7"},"Added"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Janitor now cleans up the tasks using ",(0,i.kt)("inlineCode",{parentName:"li"},"task.spawn"),"."),(0,i.kt)("li",{parentName:"ul"},"Janitor now has types."),(0,i.kt)("li",{parentName:"ul"},"Janitor will work far better with typed Luau as well.")),(0,i.kt)("h2",{id:"1134---2021-05-27"},"1.13.4 - 2021-05-27"),(0,i.kt)("h3",{id:"fixed-6"},"Fixed"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Janitor:LinkToInstance")," now works on deferred event mode. Shoutout to @Elttob for fixing it.")),(0,i.kt)("h2",{id:"100--"},"1.0.0 -"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Initial release.")))}p.isMDXComponent=!0}}]);